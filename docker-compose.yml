version: '3.8'

services:
  # Backend API Service
  arr-backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: arr-backend-opensource
    ports:
      - "8000:8000"
    environment:
      - ENV=development
      - DB_URL=sqlite:///./arr_opensource.db
      - MODEL_VERSION=basic
      - LOG_LEVEL=INFO
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Interface
  arr-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: arr-frontend-opensource
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_VERSION=opensource
    depends_on:
      - arr-backend
    restart: unless-stopped

  # Gradio Multilingual Demo Interface
  arr-demo:
    build:
      context: ./demo
      dockerfile: Dockerfile
    container_name: arr-demo-multilingual
    ports:
      - "7860:7860"
    environment:
      - ENV=demo
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=7860
    depends_on:
      - arr-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: arr-redis-opensource
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis_data:

networks:
  default:
    name: arr-opensource-network